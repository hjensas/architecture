---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

transformers:
  # Set namespace to OpenStack on all namespaced objects without a namespace
  - |-
    apiVersion: builtin
    kind: NamespaceTransformer
    metadata:
      name: _ignored_
      namespace: openstack
    setRoleBindingSubjects: none
    unsetOnly: true
    fieldSpecs:
      - path: metadata/name
        kind: Namespace
        create: true

resources:
  - ocp_nodes_nncp.yaml
  - values.yaml

patches:
  - target:
      kind: NodeNetworkConfigurationPolicy
      labelSelector: "osp/nncm-config-type=standard"
    path: ocp_node_template.yaml

replacements:
  # Common network interfaces and vlans
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.internalapi.base_iface
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=internalapi].vlan.base-iface
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.internalapi.vlan
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=internalapi].vlan.id
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.internalapi.mtu
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=internalapi].mtu
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.tenant.base_iface
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=tenant].vlan.base-iface
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.tenant.vlan
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=tenant].vlan.id
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.tenant.mtu
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=tenant].mtu
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.storage.base_iface
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=storage].vlan.base-iface
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.storage.vlan
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=storage].vlan.id
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.storage.mtu
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.[name=storage].mtu
  # ctlplane type is ethernet (not vlan)
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.ctlplane.iface
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.0.name
          - spec.desiredState.interfaces.1.bridge.port.0.name
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.ctlplane.mtu
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.0.mtu
          - spec.desiredState.interfaces.1.mtu
  # bmaas is ethernet
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.bmaas.iface
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.2.name
          - spec.desiredState.interfaces.[name=bmaas].bridge.port.0.name
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.bmaas.mtu
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.interfaces.2.mtu
          - spec.desiredState.interfaces.[name=bmaas].mtu

  # Static Node IPs: node-0
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.internalapi_ip
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=internalapi].ipv6.address.0.ip
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.tenant_ip
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=tenant].ipv6.address.0.ip
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.ctlplane_ip
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=ospbr].ipv6.address.0.ip
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.bmaas_ip
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=bmaas].ipv6.address.0.ip
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.storage_ip
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=storage].ipv6.address.0.ip

  # prefix-length: node-0
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.ctlplane.prefix-length
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=ospbr].ipv6.address.0.prefix-length
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.bmaas.prefix-length
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=bmaas].ipv6.address.0.prefix-length
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.internalapi.prefix-length
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=internalapi].ipv6.address.0.prefix-length
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.tenant.prefix-length
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=tenant].ipv6.address.0.prefix-length
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.storage.prefix-length
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - spec.desiredState.interfaces.[name=storage].ipv6.address.0.prefix-length

  # Node names
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.node_0.name
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
          name: node-0
        fieldPaths:
          - metadata.name
          - spec.nodeSelector.[kubernetes.io/hostname]

  # DNS
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.dns-resolver.config
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.dns-resolver.config

  # Routes
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.routes.config.0.destination
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.routes.config.0.destination
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.routes.config.0.next-hop-address
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.routes.config.0.next-hop-address
  - source:
      kind: ConfigMap
      name: network-values
      fieldPath: data.bridgeName
    targets:
      - select:
          kind: NodeNetworkConfigurationPolicy
        fieldPaths:
          - spec.desiredState.routes.config.0.next-hop-interface
